@page
@namespace Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexModel

<!doctype html>
<html lang="pt-br">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
    <title>Contoso Photo Gallery - Pro</title>

    <style>
        /* 1. Paleta de Cores e Fundo em Gradiente */
        :root {
            --background-start: #0f172a;
            --background-end: #1e293b;
            --accent-color: #14b8a6; /* Verde-água */
            --accent-glow: rgba(20, 184, 166, 0.4);
            --card-bg: rgba(30, 41, 59, 0.5);
            --border-color: rgba(255, 255, 255, 0.1);
        }

        body {
            background-color: var(--background-start);
            background-image: linear-gradient(145deg, var(--background-start), var(--background-end));
            background-attachment: fixed;
            color: #e2e8f0;
        }

        /* 2. Efeito "Glassmorphism" no card de upload */
        .glass-card {
            background: var(--card-bg);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px); /* Suporte para Safari */
            border: 1px solid var(--border-color);
            position: sticky;
            top: 2rem;
            transition: all 0.3s ease;
        }

        /* 3. Botão Melhorado com Gradiente e Efeitos */
        .btn-custom {
            background-image: linear-gradient(45deg, var(--accent-color), #0d9488);
            border: none;
            color: white;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }
        .btn-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px var(--accent-glow);
            color: white;
        }

        /* 4. Animações de Entrada */
        .fade-in-up {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }
        .fade-in-up.visible {
            opacity: 1;
            transform: translateY(0);
        }

        /* 5. Efeito de "Glow" nos Cards da Galeria */
        .photo-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        .photo-card {
            cursor: pointer;
            border-radius: 0.5rem;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        .photo-card:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 30px var(--accent-glow);
        }
        .photo-card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        /* 7. Pré-visualização da Imagem */
        #imagePreview {
            width: 100%;
            height: 200px;
            border: 2px dashed var(--border-color);
            border-radius: 0.5rem;
            display: none; /* Começa escondido */
            justify-content: center;
            align-items: center;
            margin-top: 1rem;
            overflow: hidden;
        }
        #imagePreview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* 9. Botão "Voltar ao Topo" */
        #scrollTopBtn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            display: none;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        #scrollTopBtn.show {
            display: block;
            opacity: 1;
        }
    </style>
</head>
<body data-bs-theme="dark">

    <header class="navbar navbar-expand-lg navbar-dark mb-4 fade-in-up">
        <div class="container">
            <a class="navbar-brand h1 mb-0" href="#">
                <i class="bi bi-images fs-4" style="color: var(--accent-color);"></i>
                Contoso Photo Gallery
            </a>
        </div>
    </header>

    <main class="container">
        <div class="row">
            <div class="col-lg-4 mb-4">
                <div class="card glass-card fade-in-up" style="transition-delay: 100ms;">
                    <div class="card-header h5 border-bottom border-secondary">
                        <i class="bi bi-cloud-arrow-up-fill" style="color: var(--accent-color);"></i> Nova Imagem
                    </div>
                    <div class="card-body">
                        <form id="uploadForm" method="post" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="formFile" class="form-label">Selecione um arquivo</label>
                                <input class="form-control" type="file" asp-for="Upload" id="formFile" accept="image/*">
                            </div>
                            <div id="imagePreview"><img id="preview" src="#" alt="Preview" /></div>
                            <div class="d-grid mt-3">
                                <button type="submit" class="btn btn-custom" id="submitButton">
                                    <span id="buttonText"><i class="bi bi-send-fill"></i> Enviar</span>
                                    <span id="buttonSpinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-lg-8">
                <h1 class="display-5 mb-4 fade-in-up" style="transition-delay: 200ms;">Sua Galeria</h1>
                
                @if (Model.ImageList != null && Model.ImageList.Count > 0)
                {
                    <div class="photo-grid">
                        @foreach (string imageUrl in Model.ImageList)
                        {
                            <div class="photo-card fade-in-up" data-bs-toggle="modal" data-bs-target="#imageModal" data-img-src="@imageUrl">
                                <img src="@imageUrl" alt="Imagem da galeria" loading="lazy" />
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center p-5 rounded border border-secondary fade-in-up">
                        <i class="bi bi-camera" style="font-size: 3rem; color: var(--accent-color);"></i>
                        <h4 class="mt-3">Nenhuma imagem encontrada</h4>
                        <p class="text-muted">Comece a sua galeria enviando a primeira imagem!</p>
                    </div>
                }
            </div>
        </div>
    </main>
    
    <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content bg-transparent border-0">
                <div class="modal-body p-0">
                    <img id="modalImage" src="" class="img-fluid rounded" alt="Imagem Ampliada">
                </div>
            </div>
        </div>
    </div>
    
    <button id="scrollTopBtn" class="btn btn-custom btn-lg rounded-circle">
        <i class="bi bi-arrow-up"></i>
    </button>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            
            // 4. Animações de Entrada com IntersectionObserver
            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        entry.target.style.transitionDelay = `${index * 50}ms`;
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.fade-in-up').forEach(el => observer.observe(el));
            
            // 7. Pré-visualização da Imagem
            const fileInput = document.getElementById('formFile');
            const imagePreview = document.getElementById('imagePreview');
            const previewImg = document.getElementById('preview');
            fileInput.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        previewImg.setAttribute('src', e.target.result);
                        imagePreview.style.display = 'flex';
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });

            // 6. Feedback Visual no Upload
            const uploadForm = document.getElementById('uploadForm');
            const submitButton = document.getElementById('submitButton');
            const buttonText = document.getElementById('buttonText');
            const buttonSpinner = document.getElementById('buttonSpinner');
            uploadForm.addEventListener('submit', function() {
                submitButton.disabled = true;
                buttonText.textContent = " Enviando...";
                buttonSpinner.style.display = 'inline-block';
            });
            
            // 8. Modal "Lightbox" para Visualização
            const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
            const modalImage = document.getElementById('modalImage');
            document.querySelectorAll('.photo-card').forEach(card => {
                card.addEventListener('click', function() {
                    const imgSrc = this.dataset.imgSrc;
                    modalImage.src = imgSrc;
                });
            });

            // 9. Botão "Voltar ao Topo"
            const scrollTopBtn = document.getElementById('scrollTopBtn');
            window.onscroll = function() {
                if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
                    scrollTopBtn.classList.add('show');
                } else {
                    scrollTopBtn.classList.remove('show');
                }
            };
            scrollTopBtn.addEventListener('click', function() {
                window.scrollTo({top: 0, behavior: 'smooth'});
            });
        });
    </script>

</body>
</html>